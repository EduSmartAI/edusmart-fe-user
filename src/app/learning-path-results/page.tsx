"use client";

import React, { useState } from "react";
import BaseScreenAdmin from "EduSmart/layout/BaseScreenAdmin";
import CourseCard from "EduSmart/components/CourseCard/CourseCard";
import { Button } from "antd";
import { FiTarget, FiTrendingUp, FiGlobe, FiStar, FiBookOpen } from "react-icons/fi";
import { useRouter } from "next/navigation";

// Mock data for courses
const mockFoundationCourses = {
  semester1: [
    {
      imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
      title: "Nh·∫≠p m√¥n L·∫≠p tr√¨nh",
      descriptionLines: ["H·ªçc c∆° b·∫£n v·ªÅ l·∫≠p tr√¨nh", "Thu·∫≠t to√°n v√† c·∫•u tr√∫c d·ªØ li·ªáu", "Th·ª±c h√†nh v·ªõi Python"],
      instructor: "TS. Nguy·ªÖn VƒÉn A",
      price: "Mi·ªÖn ph√≠",
      routerPush: "/course/intro-programming"
    },
    {
      imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
      title: "To√°n r·ªùi r·∫°c",
      descriptionLines: ["Logic to√°n h·ªçc", "L√Ω thuy·∫øt t·∫≠p h·ª£p", "ƒê·∫°i s·ªë Boolean"],
      instructor: "PGS. Tr·∫ßn Th·ªã B",
      price: "Mi·ªÖn ph√≠",
      routerPush: "/course/discrete-math"
    }
  ],
  semester2: [
    {
      imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
      title: "C·∫•u tr√∫c d·ªØ li·ªáu v√† Gi·∫£i thu·∫≠t",
      descriptionLines: ["Array, Linked List, Stack, Queue", "Tree, Graph algorithms", "Sorting v√† Searching"],
      instructor: "TS. L√™ VƒÉn C",
      price: "Mi·ªÖn ph√≠",
      routerPush: "/course/data-structures"
    },
    {
      imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
      title: "L·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng",
      descriptionLines: ["Kh√°i ni·ªám OOP", "Inheritance, Polymorphism", "Design Patterns c∆° b·∫£n"],
      instructor: "ThS. Ph·∫°m Th·ªã D",
      price: "Mi·ªÖn ph√≠",
      routerPush: "/course/oop"
    }
  ],
  semester3: [
    {
      imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
      title: "C∆° s·ªü d·ªØ li·ªáu",
      descriptionLines: ["Thi·∫øt k·∫ø CSDL", "SQL v√† NoSQL", "Database optimization"],
      instructor: "TS. Ho√†ng VƒÉn E",
      price: "Mi·ªÖn ph√≠",
      routerPush: "/course/database"
    },
    {
      imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
      title: "M·∫°ng m√°y t√≠nh",
      descriptionLines: ["TCP/IP Protocol", "Network Security", "Web Technologies"],
      instructor: "PGS. V≈© Th·ªã F",
      price: "Mi·ªÖn ph√≠",
      routerPush: "/course/networking"
    }
  ],
  semester4: [
    {
      imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
      title: "C√¥ng ngh·ªá ph·∫ßn m·ªÅm",
      descriptionLines: ["SDLC methodologies", "Agile v√† Scrum", "Testing strategies"],
      instructor: "TS. ƒê·ªó VƒÉn G",
      price: "Mi·ªÖn ph√≠",
      routerPush: "/course/software-engineering"
    }
  ]
};

const mockSpecializations = [
  {
    id: "react",
    name: "Full-stack React Developer",
    description: "Ph√°t tri·ªÉn ·ª©ng d·ª•ng web hi·ªán ƒë·∫°i v·ªõi React ecosystem",
    icon: "‚öõÔ∏è",
    courses: [
      {
        imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
        title: "React Fundamentals",
        descriptionLines: ["Components v√† JSX", "State v√† Props", "Event Handling"],
        instructor: "Nguy·ªÖn Frontend",
        price: "1,500,000 VND",
        routerPush: "/course/react-fundamentals"
      },
      {
        imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
        title: "Advanced React & Redux",
        descriptionLines: ["Redux Toolkit", "Context API", "Performance Optimization"],
        instructor: "Tr·∫ßn React Pro",
        price: "2,000,000 VND",
        routerPush: "/course/advanced-react"
      },
      {
        imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
        title: "Node.js & Express",
        descriptionLines: ["RESTful APIs", "Authentication", "Database Integration"],
        instructor: "L√™ Backend",
        price: "1,800,000 VND",
        routerPush: "/course/nodejs-express"
      }
    ]
  },
  {
    id: "dotnet",
    name: ".NET Developer",
    description: "X√¢y d·ª±ng ·ª©ng d·ª•ng enterprise v·ªõi .NET ecosystem",
    icon: "üî∑",
    courses: [
      {
        imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
        title: "C# Programming",
        descriptionLines: ["C# Syntax v√† OOP", "LINQ v√† Collections", "Async Programming"],
        instructor: "Ph·∫°m DotNet",
        price: "1,600,000 VND",
        routerPush: "/course/csharp-programming"
      },
      {
        imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
        title: "ASP.NET Core Web API",
        descriptionLines: ["RESTful Web APIs", "Entity Framework", "Authentication & Authorization"],
        instructor: "V≈© ASP.NET",
        price: "2,200,000 VND",
        routerPush: "/course/aspnet-core"
      }
    ]
  },
  {
    id: "java",
    name: "Java Enterprise Developer",
    description: "Ph√°t tri·ªÉn ·ª©ng d·ª•ng doanh nghi·ªáp v·ªõi Java Spring",
    icon: "‚òï",
    courses: [
      {
        imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
        title: "Java Core Programming",
        descriptionLines: ["Java Fundamentals", "Collections Framework", "Multithreading"],
        instructor: "Ho√†ng Java",
        price: "1,400,000 VND",
        routerPush: "/course/java-core"
      },
      {
        imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
        title: "Spring Boot Framework",
        descriptionLines: ["Spring Boot Basics", "Spring Data JPA", "Spring Security"],
        instructor: "ƒê·ªó Spring",
        price: "2,100,000 VND",
        routerPush: "/course/spring-boot"
      }
    ]
  }
];

const mockAdditionalCourses = [
  {
    imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
    title: "AWS Cloud Practitioner",
    descriptionLines: ["Cloud Computing Basics", "AWS Services Overview", "Cost Optimization"],
    instructor: "Amazon Web Services",
    price: "$99",
    routerPush: "/course/aws-cloud",
    isExternal: true,
    platform: "AWS Training"
  },
  {
    imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
    title: "Machine Learning Specialization",
    descriptionLines: ["Supervised Learning", "Neural Networks", "Practical Projects"],
    instructor: "Andrew Ng",
    price: "$49/month",
    routerPush: "/course/ml-specialization",
    isExternal: true,
    platform: "Coursera"
  },
  {
    imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
    title: "Docker & Kubernetes",
    descriptionLines: ["Container Technology", "Orchestration", "DevOps Practices"],
    instructor: "Mumshad Mannambeth",
    price: "$84.99",
    routerPush: "/course/docker-kubernetes",
    isExternal: true,
    platform: "Udemy"
  },
  {
    imageUrl: "https://img-c.udemycdn.com/course/480x270/3142166_a637_3.jpg",
    title: "System Design Interview",
    descriptionLines: ["Scalability Concepts", "Database Design", "Microservices"],
    instructor: "Alex Xu",
    price: "$199",
    routerPush: "/course/system-design",
    isExternal: true,
    platform: "Educative"
  }
];

export default function LearningPathResults() {
  const router = useRouter();
  const [selectedSpecialization, setSelectedSpecialization] = useState(mockSpecializations[0]);

  const handleGoHome = () => {
    router.push("/");
  };

  const SemesterSection = ({ semester, courses, title }: { semester: string; courses: any[]; title: string }) => (
    <div className="mb-12 relative">
      <div className="flex items-center mb-6">
        <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 text-white rounded-xl flex items-center justify-center text-lg font-bold mr-4 shadow-lg">
          {semester}
        </div>
        <div>
          <h4 className="text-xl font-bold text-gray-900 dark:text-white">{title}</h4>
          <div className="w-16 h-1 bg-gradient-to-r from-blue-500 to-blue-300 rounded-full mt-1"></div>
        </div>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 ml-16">
        {courses.map((course, index) => (
          <div key={index} className="transform hover:scale-105 transition-transform duration-300">
            <CourseCard {...course} />
          </div>
        ))}
      </div>
    </div>
  );

  return (
    <BaseScreenAdmin>
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
        <div className="max-w-7xl mx-auto px-6 py-8">
          
          {/* Header */}
          <div className="text-center mb-12 ">
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6 leading-tight">
              L·ªô tr√¨nh h·ªçc t·∫≠p{" "}
              <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-green-600">
                d√†nh ri√™ng cho b·∫°n
              </span>
            </h1>
            
            <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
              D·ª±a tr√™n k·∫øt qu·∫£ kh·∫£o s√°t v√† ƒë√°nh gi√° nƒÉng l·ª±c, ch√∫ng t√¥i ƒë√£ t·∫°o ra l·ªô tr√¨nh h·ªçc t·∫≠p 
              ph√π h·ª£p nh·∫•t ƒë·ªÉ gi√∫p b·∫°n ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u ngh·ªÅ nghi·ªáp.
            </p>
          </div>

          {/* Section 1: Foundation Courses */}
          <div className="mb-16 relative">
            {/* Background Highlight */}
            <div className="absolute inset-0 bg-gradient-to-r from-blue-50 via-blue-25 to-transparent dark:from-blue-900/10 dark:via-blue-800/5 dark:to-transparent rounded-3xl -m-4"></div>
            
            <div className="relative z-10">
              <div className="mb-8">
                <div className="relative">
                  <div className="absolute left-0 top-0 bottom-0 w-1 bg-gradient-to-b from-blue-500 to-blue-600 rounded-full"></div>
                  <div className="pl-6">
                    <div className="inline-block">
                      <h2 className="text-3xl font-black text-blue-700 dark:text-blue-400 mb-2 drop-shadow-lg">
                        L·ªô tr√¨nh kh·ªüi ƒë·∫ßu
                      </h2>
                      {/* <div className="w-24 h-1.5 bg-gradient-to-r from-blue-500 to-blue-300 rounded-full mb-3 shadow-sm"></div> */}
                    </div>
                    <p className="text-gray-600 dark:text-gray-300 text-lg">
                      C√°c m√¥n h·ªçc n·ªÅn t·∫£ng b·∫Øt bu·ªôc t·ª´ k·ª≥ 1 ƒë·∫øn k·ª≥ 4
                    </p>
                  </div>
                </div>
              </div>

              <div className="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-xl border border-blue-200 dark:border-blue-800 relative overflow-hidden">
                {/* Decorative elements */}
                <div className="absolute top-0 right-0 w-32 h-32 bg-blue-100 dark:bg-blue-900/20 rounded-full transform translate-x-16 -translate-y-16"></div>
                <div className="absolute bottom-0 left-0 w-24 h-24 bg-blue-50 dark:bg-blue-900/10 rounded-full transform -translate-x-12 translate-y-12"></div>
                <div className="relative z-10">
              <SemesterSection 
                semester="1" 
                courses={mockFoundationCourses.semester1} 
                title="K·ª≥ 1 - Nh·∫≠p m√¥n" 
              />
              <SemesterSection 
                semester="2" 
                courses={mockFoundationCourses.semester2} 
                title="K·ª≥ 2 - C∆° s·ªü" 
              />
              <SemesterSection 
                semester="3" 
                courses={mockFoundationCourses.semester3} 
                title="K·ª≥ 3 - N√¢ng cao" 
              />
              <SemesterSection 
                semester="4" 
                courses={mockFoundationCourses.semester4} 
                title="K·ª≥ 4 - ·ª®ng d·ª•ng" 
              />
                </div>
              </div>
            </div>
          </div>

          {/* Section 2: Specialization Courses */}
          <div className="mb-16 relative">
            {/* Background Highlight */}
            <div className="absolute inset-0 bg-gradient-to-r from-green-50 via-emerald-25 to-transparent dark:from-green-900/10 dark:via-emerald-800/5 dark:to-transparent rounded-3xl -m-4"></div>
            
            <div className="relative z-10">
              <div className="mb-8">
                <div className="relative">
                  <div className="absolute left-0 top-0 bottom-0 w-1 bg-gradient-to-b from-green-500 to-emerald-600 rounded-full"></div>
                  <div className="pl-6">
                    <div className="inline-block">
                      <h2 className="text-3xl font-black text-green-700 dark:text-green-400 mb-2 drop-shadow-lg">
                        Chuy√™n ng√†nh h·∫πp ph√π h·ª£p
                      </h2>
                      {/* <div className="w-24 h-1.5 bg-gradient-to-r from-green-500 to-emerald-400 rounded-full mb-3 shadow-sm"></div> */}
                    </div>
                    <p className="text-gray-600 dark:text-gray-300 text-lg">
                      AI ƒë·ªÅ xu·∫•t c√°c chuy√™n ng√†nh h·∫πp ph√π h·ª£p v·ªõi nƒÉng l·ª±c v√† s·ªü th√≠ch c·ªßa b·∫°n
                    </p>
                  </div>
                </div>
              </div>

              <div className="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-xl border border-green-200 dark:border-green-800 relative overflow-hidden">
                {/* Decorative elements */}
                <div className="absolute top-0 right-0 w-40 h-40 bg-green-100 dark:bg-green-900/20 rounded-full transform translate-x-20 -translate-y-20"></div>
                <div className="absolute bottom-0 left-0 w-28 h-28 bg-emerald-50 dark:bg-emerald-900/10 rounded-full transform -translate-x-14 translate-y-14"></div>
                <div className="relative z-10">
              {/* Specialization Tabs */}
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
                {mockSpecializations.map((spec) => (
                  <div
                    key={spec.id}
                    onClick={() => setSelectedSpecialization(spec)}
                    className={`relative cursor-pointer rounded-xl p-4 transition-all duration-300 transform hover:scale-105 ${
                      selectedSpecialization.id === spec.id
                        ? 'bg-gradient-to-br from-green-500 to-emerald-600 text-white shadow-lg shadow-green-200 dark:shadow-green-900/50'
                        : 'bg-white dark:bg-gray-700 border-2 border-gray-200 dark:border-gray-600 hover:border-green-300 dark:hover:border-green-600 shadow-md hover:shadow-lg'
                    }`}
                  >
                    {/* Selection Indicator */}
                    {selectedSpecialization.id === spec.id && (
                      <div className="absolute top-3 right-3 w-5 h-5 bg-white rounded-full flex items-center justify-center">
                        <div className="w-2.5 h-2.5 bg-green-500 rounded-full"></div>
                      </div>
                    )}
                    
                    {/* Icon */}
                    <div className={`w-12 h-12 rounded-xl flex items-center justify-center mb-3 ${
                      selectedSpecialization.id === spec.id 
                        ? 'bg-white/20' 
                        : 'bg-gray-100 dark:bg-gray-600'
                    }`}>
                      <span className="text-2xl">{spec.icon}</span>
                    </div>
                    
                    {/* Content */}
                    <div>
                      <h3 className={`font-bold text-lg mb-1.5 ${
                        selectedSpecialization.id === spec.id 
                          ? 'text-white' 
                          : 'text-gray-900 dark:text-white'
                      }`}>
                        {spec.name}
                      </h3>
                      <p className={`text-xs leading-relaxed ${
                        selectedSpecialization.id === spec.id 
                          ? 'text-white/90' 
                          : 'text-gray-600 dark:text-gray-300'
                      }`}>
                        {spec.description}
                      </p>
                    </div>
                    
                    {/* Bottom Accent */}
                    <div className={`absolute bottom-0 left-0 right-0 h-0.5 rounded-b-xl ${
                      selectedSpecialization.id === spec.id 
                        ? 'bg-white/30' 
                        : 'bg-gradient-to-r from-green-400 to-emerald-500 opacity-0 group-hover:opacity-100'
                    }`}></div>
                  </div>
                ))}
              </div>

              {/* Selected Specialization Courses */}
              <div>
                <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-6 flex items-center">
                  <span className="text-2xl mr-3">{selectedSpecialization.icon}</span>
                  L·ªô tr√¨nh {selectedSpecialization.name}
                </h3>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {selectedSpecialization.courses.map((course, index) => (
                    <CourseCard key={index} {...course} />
                  ))}
                </div>
              </div>
                </div>
              </div>
            </div>
          </div>

          {/* Section 3: Additional Courses */}
          <div className="mb-16 relative">
            {/* Background Highlight */}
            <div className="absolute inset-0 bg-gradient-to-r from-purple-50 via-violet-25 to-transparent dark:from-purple-900/10 dark:via-violet-800/5 dark:to-transparent rounded-3xl -m-4"></div>
            
            <div className="relative z-10">
              <div className="mb-8">
                <div className="relative">
                  <div className="absolute left-0 top-0 bottom-0 w-1 bg-gradient-to-b from-purple-500 to-violet-600 rounded-full"></div>
                  <div className="pl-6">
                    <div className="inline-block">
                      <h2 className="text-3xl font-black text-purple-700 dark:text-purple-400 mb-2 drop-shadow-lg">
                        ƒê·ªÅ xu·∫•t c√°c kh√≥a h·ªçc b√™n ngo√†i
                      </h2>
                      {/* <div className="w-24 h-1.5 bg-gradient-to-r from-purple-500 to-violet-400 rounded-full mb-3 shadow-sm"></div> */}
                    </div>
                    <p className="text-gray-600 dark:text-gray-300 text-lg">
                      C√°c kh√≥a h·ªçc t·ª´ c√°c n·ªÅn t·∫£ng uy t√≠n ƒë·ªÉ n√¢ng cao k·ªπ nƒÉng chuy√™n m√¥n
                    </p>
                  </div>
                </div>
              </div>

              <div className="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-xl border border-purple-200 dark:border-purple-800 relative overflow-hidden">
                {/* Decorative elements */}
                <div className="absolute top-0 right-0 w-36 h-36 bg-purple-100 dark:bg-purple-900/20 rounded-full transform translate-x-18 -translate-y-18"></div>
                <div className="absolute bottom-0 left-0 w-32 h-32 bg-violet-50 dark:bg-violet-900/10 rounded-full transform -translate-x-16 translate-y-16"></div>
                <div className="relative z-10">
              <div className="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6 md:gap-6 lg:gap-8">
                {mockAdditionalCourses.map((course, index) => (
                  <div key={index} className="relative transform hover:scale-105 transition-transform duration-300 flex justify-center">
                    {course.isExternal && (
                      <div className="absolute top-3 right-3 z-10 bg-purple-500 text-white text-xs px-3 py-1.5 rounded-full font-medium shadow-lg">
                        {course.platform}
                      </div>
                    )}
                    <div className="w-full max-w-sm">
                      <CourseCard {...course} />
                    </div>
                  </div>
                ))}
              </div>
                </div>
              </div>
            </div>
          </div>

          {/* Call to Action */}
          {/* <div className="text-center">
            <div className="bg-gradient-to-r from-blue-600 to-green-600 rounded-2xl p-8 text-white">
              <h3 className="text-2xl font-bold mb-4">S·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·∫≠p?</h3>
              <p className="text-blue-100 mb-6">
                H√£y b·∫Øt ƒë·∫ßu v·ªõi c√°c kh√≥a h·ªçc n·ªÅn t·∫£ng v√† ti·∫øn t·ªõi chuy√™n ng√†nh m∆° ∆∞·ªõc c·ªßa b·∫°n
              </p>
              <Button 
                size="large" 
                onClick={handleGoHome}
                className="bg-white text-blue-600 border-none hover:bg-gray-100 px-8 py-3 h-auto font-semibold rounded-xl"
                icon={<FiBookOpen className="w-5 h-5" />}
              >
                B·∫Øt ƒë·∫ßu h·ªçc ngay
              </Button>
            </div>
          </div> */}
        </div>
      </div>
    </BaseScreenAdmin>
  );
}
